networks:
  practical-work-5-network:
    driver: bridge

x-kafka-common: &kafka-common
  image: bitnami/kafka:latest
  networks:
    - practical-work-5-network

x-kafka-common-env: &kafka-common-env
  KAFKA_ENABLE_KRAFT: yes
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-controller-0:9091,1001@kafka-controller-1:9092,1002@kafka-controller-2:9093
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
  ALLOW_PLAINTEXT_LISTENER: yes
  KAFKA_KRAFT_CLUSTER_ID: PRACTICAL-WORK-5-KAFKA-CLUSTER
  KAFKA_CFG_NUM_PARTITIONS: 3
  KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 3
  KAFKA_CFG_MIN_INSYNC_REPLICAS: 2
  KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

services:
  kafka-controller-0:
    <<: *kafka-common
    container_name: kafka-controller-0
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_NODE_ID: 1000
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9091

  kafka-controller-1:
    <<: *kafka-common
    container_name: kafka-controller-1
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_NODE_ID: 1001
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9092

  kafka-controller-2:
    <<: *kafka-common
    container_name: kafka-controller-2
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_NODE_ID: 1002
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9093

  kafka-broker-0:
    <<: *kafka-common
    container_name: kafka-broker-0
    ports:
      - "9094:9094"
    depends_on:
      - kafka-controller-0
      - kafka-controller-1
      - kafka-controller-2
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 20s
      timeout: 10s
      retries: 15
      start_period: 30s
    volumes:
      - ./jmx/kafka_broker.yml:/opt/kafka_broker.yml:ro
      - ./jmx/jmx_prometheus_javaagent-1.0.1.jar:/opt/jmx_prometheus_javaagent-1.0.1.jar:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CLIENT_LISTENER_NAME: EXTERNAL
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-0:9092,EXTERNAL://kafka-broker-0:9094
      EXTRA_ARGS: "-javaagent:/opt/jmx_prometheus_javaagent-1.0.1.jar=9404:/opt/kafka_broker.yml"

  kafka-broker-1:
    <<: *kafka-common
    container_name: kafka-broker-1
    ports:
      - "9095:9095"
    depends_on:
      - kafka-controller-0
      - kafka-controller-1
      - kafka-controller-2
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 20s
      timeout: 10s
      retries: 15
      start_period: 30s
    volumes:
      - ./jmx/kafka_broker.yml:/opt/kafka_broker.yml:ro
      - ./jmx/jmx_prometheus_javaagent-1.0.1.jar:/opt/jmx_prometheus_javaagent-1.0.1.jar:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CLIENT_LISTENER_NAME: EXTERNAL
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:9095
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-1:9092,EXTERNAL://kafka-broker-1:9095
      EXTRA_ARGS: "-javaagent:/opt/jmx_prometheus_javaagent-1.0.1.jar=9404:/opt/kafka_broker.yml"

  kafka-broker-2:
    <<: *kafka-common
    container_name: kafka-broker-2
    ports:
      - "9096:9096"
    depends_on:
      - kafka-controller-0
      - kafka-controller-1
      - kafka-controller-2
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 20s
      timeout: 10s
      retries: 15
      start_period: 30s
    volumes:
      - ./jmx/kafka_broker.yml:/opt/kafka_broker.yml:ro
      - ./jmx/jmx_prometheus_javaagent-1.0.1.jar:/opt/jmx_prometheus_javaagent-1.0.1.jar:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CLIENT_LISTENER_NAME: EXTERNAL
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:9096
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-2:9092,EXTERNAL://kafka-broker-2:9096
      EXTRA_ARGS: "-javaagent:/opt/jmx_prometheus_javaagent-1.0.1.jar=9404:/opt/kafka_broker.yml"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - practical-work-5-network
    ports:
      - "8080:8080"
    depends_on:
      kafka-broker-0:
        condition: service_healthy
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: PRACTICAL-WORK-5-KAFKA-CLUSTER
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker-0:9092,kafka-broker-1:9092,kafka-broker-2:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083

  schema-registry:
    image: confluentinc/cp-schema-registry:7.8.3
    container_name: schema-registry
    hostname: schema-registry
    networks:
      - practical-work-5-network
    ports:
      - "8081:8081"
    depends_on:
      kafka-broker-0:
        condition: service_healthy
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/subjects" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-2:9092,PLAINTEXT://kafka-broker-1:9092,PLAINTEXT://kafka-broker-0:9092

  postgres:
    image: debezium/postgres:17-alpine
    hostname: postgres
    container_name: postgres
    networks:
      - practical-work-5-network
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres_user", "-d", "practical_work_5_database" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - ./postgres/configuration.conf:/etc/postgresql/postgresql.conf
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: practical_work_5_database

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.7.1
    container_name: kafka-connect
    hostname: kafka-connect
    networks:
      - practical-work-5-network
    ports:
      - "8083:8083"
    depends_on:
      kafka-broker-0:
        condition: service_healthy
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/connectors" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - ./plugins/:/etc/kafka-connect/jars
      - ./jmx/jmx_prometheus_javaagent-1.0.1.jar:/opt/jmx_prometheus_javaagent-1.0.1.jar:ro
      - ./jmx/kafka_connect.yml:/opt/kafka_connect.yml:ro
    environment:
      CONNECT_REST_LISTENERS: http://0.0.0.0:8083
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_ADVERTISED_PORT: 8083
      CONNECT_BOOTSTRAP_SERVERS: kafka-broker-0:9092,kafka-broker-1:9092,kafka-broker-2:9092
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: connect_config_storage
      CONNECT_OFFSET_STORAGE_TOPIC: connect_offset_storage
      CONNECT_STATUS_STORAGE_TOPIC: connect_status_storage
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_PARTITIONS: 25
      CONNECT_STATUS_STORAGE_PARTITIONS: 5
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_PLUGIN_PATH: /usr/share/confluent-hub-components,/usr/share/java,/etc/kafka-connect/jars
      KAFKA_OPTS: -javaagent:/opt/jmx_prometheus_javaagent-1.0.1.jar=9404:/opt/kafka_connect.yml

  prometheus:
    image: prom/prometheus:latest
    networks:
      - practical-work-5-network
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml

  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    container_name: grafana
    networks:
      - practical-work-5-network
    ports:
      - "3000:3000"
    depends_on:
      - prometheus